import "../thrift-helper-functions.eol";

pre {
	var date : String = getDate();
	doSetup();
	var extension : String = ".rb";
	var rbName : String = fileName.camelToUnderscore().toLowerCase();
	var typesName : String = rbName+"_types";
	var constsName : String = rbName+"_constants";
	var structEGL : String = "thrift-rb-struct.egl";
	var pkgId : String = getNamespaceFor("rb");
	var author : String = "Thrift Compiler (0.9.3)";
	var outDir : String = getOutputDir(pkgId);
}

rule Types {
	parameters : Map {
		"enums" = Enum.allInstances(),
		"structs" = Struct.allInstances(),
		"unions" = Union.allInstances(),
		"structEGL" = structEGL,
		"outputFile" = outDir+typesName+extension,
		"package" = pkgId,
		"date" = date,
		"author" = author
	}
	template: "thrift-rb-types.egl"
	target: outDir+typesName+extension
}

rule Constants {
	parameters : Map {
		"constants" = Const.allInstances(),
		"types" = typesName,
		"className" = constsName,
		"package" = pkgId,
		"date" = date,
		"author" = author
	}
	template: "thrift-rb-constants.egl"
	target: outDir+constsName+extension
}

rule Services transform service : Service {
	parameters : Map {
		"service" = service,
		"identifier" = service.identifier,
		"hasSuper" = service.hasSuper(),
		"supers" = service.supers,
		"functions" = service.functions,
		"types" = typesName,
		"structEGL" = structEGL,
		"outputFile" = outDir+service.identifier+extension,
		"comment" = service.comment,
		"package" = pkgId,
		"date" = date,
		"author" = author
	}
	template: "thrift-rb-service.egl"
	target: outDir+service.identifier.toLowerCase()+extension
}
